name: Get latest tag

on:
  workflow_dispatch:
    inputs:
        environment:
          description: Select an environment
          type: choice
          required: true
          default: ""
          options:
            - prod
            - qa
            - staging

jobs:

    env_check:
        runs-on: ubuntu-latest
        steps:
          - name: Environment check on branch
            id: branch_check
            run: |
              echo "Running on branch ${{ github.ref }}"
              
              if [ "${{ inputs.environment }}" = "prod" ]; then
                echo "env_name=prod" >> $GITHUB_OUTPUT
                echo "deploy_branch=main" >> $GITHUB_OUTPUT
              elif [ "${{ inputs.environment }}" = "staging" ]; then
                echo "env_name=stg" >> $GITHUB_OUTPUT
                echo "deploy_branch=release" >> $GITHUB_OUTPUT
              elif [ "${{ inputs.environment }}" = "qa" ]; then
                echo "env_name=qa" >> $GITHUB_OUTPUT
                echo "deploy_branch=develop" >> $GITHUB_OUTPUT
              else
                echo "env_name=dev" >> $GITHUB_OUTPUT
                echo "deploy_branch=develop" >> $GITHUB_OUTPUT
              fi                  
          - name: Use environment setup in previous step
            run: echo "Setting up environment ${{ steps.branch_check.outputs.env_name }}"
    
        outputs:
          env_name: ${{ steps.branch_check.outputs.env_name }}


    deployment_check:
      name: Deployment check
      runs-on: ubuntu-latest
      needs: env_check
      steps:
        - name: Abort deployment on wrongly selected env/tag for Prod
          if: ${{ needs.env_check.outputs.env_name == 'prod' }}
          shell: bash
          run: |
            if [ !${{ github.ref == 'refs/heads/main' }} ]; then
              echo "This workflow is only supported on the main branch."
              exit 1
            fi 

        - name: Abort deployment on wrongly selected env/tag for QA
          if: ${{ needs.env_check.outputs.env_name == 'qa' }}
          shell: bash
          run: |
            if [ ${{ !startsWith(github.ref_name, 'demo') }} ]; then
              echo "This workflow is only supported on the demo branches."
              exit 1
            fi 

        - name: Abort deployment on wrongly selected env/tag for Staging
          if: ${{ needs.env_check.outputs.env_name == 'staging' }}
          shell: bash
          run: |
            if [ ${{ !startsWith(github.ref_name, 'release') }} ]; then
              echo "This workflow is only supported on the staging tags."
              exit 1
            fi

    get_last_tag:
        runs-on: ubuntu-latest
        needs: [deployment_check,env_check]
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v4
            - name: Get latest staging tag
              uses: rmeneely/git-last-tag@v1
              with:
                tag_pattern: '${{ needs.env_check.outputs.env_name }}-v[0-9]*.[0-9]*.[0-9]*'
            
            - name: Print latest tag
              run: |
                echo ${{ env.LAST_TAG }}
